% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualisation.R
\name{plot_1D_transport}
\alias{plot_1D_transport}
\title{Plotting dense 1D transport}
\usage{
plot_1D_transport(
  transportPlan,
  supplyList,
  demandList,
  stacked = TRUE,
  mirrored = FALSE,
  palette = "spectral"
)
}
\arguments{
\item{transportPlan}{A non negative numeric matrix giving the mass transport. The value at \eqn{(i, j)}
gives the mass transported from supply point \eqn{i} to demand point \eqn{j}.}

\item{supplyList}{A list containing the non negative supply measure and the underlying discretization as vectors.}

\item{demandList}{A list containing the non negative demand measure and the underlying discretization as vectors.}

\item{stacked}{A boolean declaring whether to draw the transported intervals vertically stacked (Default: \code{FALSE}).}

\item{mirrored}{A boolean declaring whether to draw supply and demand in opposite directions (Default: \code{FALSE}).}

\item{palette}{The color palette to use for transport visualization, may be "rainbow" or any accepted by \link[grDevices]{hcl.colors} (Default: "spectral").

\if{html}{\figure{1D.png}}
\if{latex}{\figure{1D.png}{options: width=0.5in}}}
}
\description{
A function to plot optimal transport between discretizations of continuous supply and demand measures in 1D.
}
\examples{
I <- 1000
J <- 1000
X <- seq(0, 1, length.out = I)
Y <- seq(0, 1, length.out = J)

p <- rep(0, I)
p[2:200] = 2
p[901:1000] = c(seq(0, 2, length.out = 50), seq(2, 0, length.out = 50))

q <- rep(0, J)
q[201:400] = seq(0, 2, length.out = 200)
q[501:900] = 1.3 * sqrt(1 - seq(-1, 1, length.out = 400)^2)

supply <- list(p, X)
demand <- list(q, Y)

maxIter <- 200
eps <- 1e-3

suppyDiv <- list("KL", 0.04)
demandDiv <- list("KL", 0.04)
res <- regularized_transport(supply, demand, suppyDiv, demandDiv,
                             maxIteration = maxIter, epsVector = eps, p = 2)
plot_1D_transport(res$transportPlan, supply, demand)


}
