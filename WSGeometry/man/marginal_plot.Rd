% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/marginal_plots.R
\name{marginal_plot}
\alias{marginal_plot}
\title{Plot transport between 1D marginals.}
\usage{
marginal_plot(
  A,
  B,
  plan,
  A.type = "line",
  B.type = "line",
  A.col = c("red", "darkred"),
  B.col = c("blue", "darkblue"),
  A.size = c(2, 4),
  B.size = c(2, 4),
  plan.type = "pointsCol",
  plan.size = c(1),
  plan.col = c("white", "purple"),
  grid = c(FALSE, FALSE),
  grid.type = "dashed",
  grid.col = "lightgrey",
  grid.width = 0.5,
  axis.width = 5,
  axis.length = 0.6
)
}
\arguments{
\item{A}{A list with the entries "positions" and "weights" specifying a one-dimensional measure.}

\item{B}{A list with the entries "positions" and "weights" specifying a one-dimensional measure.}

\item{plan}{A matrix representing a transport plan between A and B.}

\item{A.type}{A control parameter specifying the type of marginal plot. The option "line" yields a lineplot and the option
"bars" yields a bar plot.}

\item{B.type}{A control parameter specifying the type of marginal plot. The option "line" yields a lineplot and the option
"bars" yields a bar plot.}

\item{A.col}{A vector one two colours specifying the colours uses for the marginal plot of A. For "line" the first entry 
specifies the colour below the line and the second one the colour of the line. For "bars" the first entry specifies the 
colour of the bar and the second one the colour of the dot.}

\item{B.col}{A vector one two colours specifying the colours uses for the marginal plot of A. For "line" the first entry 
specifies the colour below the line and the second one the colour of the line. For "bars" the first entry specifies the 
colour of the bar and the second one the colour of the dot.}

\item{A.size}{For "line" a real number specifying the width of the line. For "bars" a vector of two real numbers, where 
the first specifies the size of the dot and the second one the width of the bar.}

\item{B.size}{For "line" a real number specifying the width of the line. For "bars" a vector of two real numbers, where 
the first specifies the size of the dot and the second one the width of the bar.}

\item{plan.type}{A control parameter specifying the type of plot for the transport plan. "line" provides a lineplot.
"pointsCol" displays the plan in terms of dots where the colour decodes the mass at a given location. "pointsSize" displays
the plan in terms of dots where the size of a point decodes its mass.}

\item{plan.size}{For "line" a real number specifying the width of the line. For "pointsCol" a real number specifying the 
size of the dots. For "pointsSize" a vector of two real numbers specifying the minimal and maximal size of the dots.}

\item{plan.col}{For "line" a colour specifying the colour of the line. For "pointsSize" a colour specifying the colour of 
the points. For "pointsCol" a vector of two colours, where the first corresponds to the colour of the minimal mass and the 
second to the colour of the maximum of the masses in the plan.}

\item{grid}{A vector of two booleans specifiyng whether a grid should be drawn. The first entry specifies whether the lines
starting from the left marginal are drawn and the second whether the ones from the one at the top are drawn.}

\item{grid.type}{A control parameter specifying the type of line used for the grid. See \link[ggplot2]{linetype} for details.}

\item{grid.col}{A colour specifying the colour of the lines of the grid.}

\item{grid.width}{A real number specifying the width of the lines of the grid.}

\item{axis.width}{A real number specifying the width of the axis.}

\item{axis.length}{A number between 0 and 1 specifying the length of the axis drawn after their intersection point.}
}
\value{
This function does not provide any return value, but is only called for the plot it generates.
}
\description{
Generates a plot displaying two one-dimensional marginal distribution and a specified transportplan between them.
}
\examples{
#Example Discrete
x.vec<-matrix(seq(-8,8,1))
y.vec<-matrix(seq(-8,8,2))
W1<-dnorm(x.vec,3,1)+dnorm(x.vec,0,4)+dnorm(x.vec,0,1)
W1<-W1/sum(W1)
W2<-dnorm(y.vec,-3,0.4)+dnorm(y.vec,-1,2)+dnorm(y.vec,2,1.5)
W2<-W2/sum(W2)
G1<-list(positions=x.vec,weights=W1)
G2<-list(positions=y.vec,weights=W2)
wpp1<-WSGeometry:::wpp(x.vec,W1)
wpp2<-WSGeometry:::wpp(y.vec,W2)
cmat<-t((WSGeometry:::gen_cost(x.vec,y.vec)))
plan<-transport::transport(W1,W2,cmat,method="networkflow",fullreturn=TRUE)$primal
marginal_plot(G1,G2,plan,A.type ="bars",B.type="bars",A.size=c(2,4),B.size=c(2,4),
plan.size = c(0,6),plan.col=c("purple"),axis.length = 0.5,plan.type = "pointsSize",
grid=c(TRUE,TRUE),grid.type = "dashed",grid.col="lightgrey")





#Example Semi-Discrete
x.vec<-matrix(seq(-8,8,0.01))
y.vec<-matrix(seq(-8,8,2))
W1<-dnorm(x.vec,3,1)+dnorm(x.vec,0,4)+dnorm(x.vec,0,1)
W1<-W1/sum(W1)
W2<-dnorm(y.vec,-3,0.4)+dnorm(y.vec,-1,2)+dnorm(y.vec,2,1.5)
W2<-W2/sum(W2)
G1<-list(positions=x.vec,weights=W1)
G2<-list(positions=y.vec,weights=W2)
wpp1<-WSGeometry:::wpp(x.vec,W1)
wpp2<-WSGeometry:::wpp(y.vec,W2)
cmat<-t((WSGeometry:::gen_cost(x.vec,y.vec)))
plan<-transport::transport(W1,W2,cmat,method="networkflow",fullreturn=TRUE)$primal
marginal_plot(G1,G2,plan,A.type ="line",B.type="bars",A.size=c(2,4),B.size=c(2,4),
plan.size = c(1),plan.col=c("yellow","red"),axis.length = 0.5,
plan.type = "pointsCol",grid=c(FALSE,FALSE))





#Example Continuous
x.vec<-matrix(seq(-8,8,0.01))
y.vec<-matrix(seq(-8,8,0.01))
W1<-dnorm(x.vec,3,1)+dnorm(x.vec,0,4)+dnorm(x.vec,0,1)
W1<-W1/sum(W1)
W2<-dnorm(y.vec,-3,0.4)+dnorm(y.vec,-1,2)+dnorm(y.vec,2,1.5)
W2<-W2/sum(W2)
G1<-list(positions=x.vec,weights=W1)
G2<-list(positions=y.vec,weights=W2)
wpp1<-WSGeometry:::wpp(x.vec,W1)
wpp2<-WSGeometry:::wpp(y.vec,W2)
cmat<-t((WSGeometry:::gen_cost(x.vec,y.vec)))
plan<-transport::transport(W1,W2,cmat,method="networkflow",fullreturn=TRUE)$primal
marginal_plot(G1,G2,plan,A.type ="line",B.type="line",A.size=c(2,4),
B.size=c(2,4),plan.size = c(1),plan.col=c("black","black"),
axis.length = 0.5,plan.type = "line",grid=c(FALSE,FALSE))
}
